{"version":3,"sources":["D:/git/github/ContactManager/src/ContactManager.Client/src async","D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.component.css","D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.component.html","D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.component.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.module.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.routing.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/common/basic-validators.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/common/http-json-client.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-form/contact-form.component.css","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-form/contact-form.component.html","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-form/contact-form.component.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-list/contact-list.component.css","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-list/contact-list.component.html","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-list/contact-list.component.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contacts-routing.module.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contacts.module.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/shared/contact-model.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/shared/contacts.service.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/home/home.component.css","D:/git/github/ContactManager/src/ContactManager.Client/src/app/home/home.component.html","D:/git/github/ContactManager/src/ContactManager.Client/src/app/home/home.component.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/nav-bar/nav-bar.component.css","D:/git/github/ContactManager/src/ContactManager.Client/src/app/nav-bar/nav-bar.component.html","D:/git/github/ContactManager/src/ContactManager.Client/src/app/nav-bar/nav-bar.component.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/app/not-found/not-found.component.css","D:/git/github/ContactManager/src/ContactManager.Client/src/app/not-found/not-found.component.html","D:/git/github/ContactManager/src/ContactManager.Client/src/app/not-found/not-found.component.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/environments/environment.ts","D:/git/github/ContactManager/src/ContactManager.Client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<app-nav-bar></app-nav-bar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {ContactsModule} from './contacts/contacts.module'\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nimport {appRouting} from './app.routing'\nimport {ContactsRoutingModule} from './contacts/contacts-routing.module'\n\nimport {HttpJsonClient} from './common/http-json-client';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavBarComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    appRouting,\n    ContactsModule,\n    ContactsRoutingModule\n  ],\n  providers: [HttpJsonClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.module.ts","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', pathMatch: 'full', component: HomeComponent },\r\n  { path: 'home', pathMatch: 'full', component: HomeComponent },\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: '**', redirectTo: 'not-found' }\r\n];\r\n\r\nexport const appRouting: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/app.routing.ts","import { FormControl } from '@angular/forms';\r\n\r\nexport class BasicValidators {\r\n\r\n  static email (control: FormControl) {\r\n\r\n    const EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    return EMAIL_REGEXP.test(control.value) ? null : {\r\n      validateEmail: {\r\n        valid: false\r\n      }\r\n    };\r\n  }\r\n\r\n  static phone (control: FormControl) {\r\n\r\n    const PHONE_REGEXP = /^(\\s*|\\d{9})$/;\r\n\r\n    return !control.value || PHONE_REGEXP.test(control.value) ? null : {\r\n      validatePhone: {\r\n        valid: false\r\n      }\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/common/basic-validators.ts","import {Injectable} from '@angular/core';\r\nimport {Http, Headers, RequestOptions} from '@angular/http';\r\n\r\n@Injectable()\r\nexport class HttpJsonClient {\r\n\r\n  constructor(private http: Http) {}\r\n\r\n  createJsonContentTypeHeader(headers: Headers) {\r\n    headers.append('Content-Type', 'application/json');\r\n  }\r\n\r\n  get(url, params?) {\r\n    const headers = new Headers();\r\n    this.createJsonContentTypeHeader(headers);\r\n    const options = new RequestOptions({ headers: headers });\r\n    if (params) {\r\n      options.params = params;\r\n    }\r\n    return this.http.get(url, options);\r\n  }\r\n\r\n  post(url, data) {\r\n    const headers = new Headers();\r\n    this.createJsonContentTypeHeader(headers);\r\n    return this.http.post(url, JSON.stringify(data), {\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  put(url, data) {\r\n    const headers = new Headers();\r\n    this.createJsonContentTypeHeader(headers);\r\n    return this.http.put(url, JSON.stringify(data), {\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  delete(url) {\r\n    const headers = new Headers();\r\n    this.createJsonContentTypeHeader(headers);\r\n    return this.http.delete(url, {\r\n      headers: headers\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/common/http-json-client.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-form/contact-form.component.css\n// module id = ../../../../../src/app/contacts/contact-form/contact-form.component.css\n// module chunks = 1","module.exports = \"<h5>{{ title }}</h5>\\n<div class=\\\"row\\\">\\n  <form materialize class=\\\"col s12\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s6\\\">\\n        <i class=\\\"material-icons prefix\\\">account_circle</i>\\n        <input id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"validate\\\"\\n               [(ngModel)]=\\\"contact.firstName\\\" formControlName=\\\"firstName\\\"\\n        >\\n        <label for=\\\"firstName\\\"\\n               [class.active]=\\\"contact.firstName\\\">\\n          First name\\n        </label>\\n      </div>\\n      <div class=\\\"input-field col s6\\\">\\n        <i class=\\\"material-icons prefix\\\">account_circle</i>\\n        <input id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"validate\\\"\\n               [(ngModel)]=\\\"contact.lastName\\\" formControlName=\\\"lastName\\\"\\n               [class.invalid]=\\\"form.controls['lastName'].touched && !form.controls['lastName'].valid\\\"\\n        >\\n        <label for=\\\"lastName\\\"\\n               [class.active]=\\\"contact.lastName\\\"\\n               data-error=\\\"Last name is required\\\">\\n          Last name\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s6\\\">\\n        <i class=\\\"material-icons prefix\\\">email</i>\\n        <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"validate\\\"\\n               [(ngModel)]=\\\"contact.email\\\" formControlName=\\\"email\\\"\\n               [class.invalid]=\\\"form.controls['email'].touched && !form.controls['email'].valid\\\">\\n        <label for=\\\"email\\\"\\n               [class.active]=\\\"contact.email\\\"\\n               data-error=\\\"Invalid Email\\\">\\n          Email\\n        </label>\\n      </div>\\n      <div class=\\\"input-field col s6\\\">\\n        <i class=\\\"material-icons prefix\\\">phone</i>\\n        <input id=\\\"phoneNumber\\\" type=\\\"text\\\" class=\\\"validate\\\"\\n               [(ngModel)]=\\\"contact.phoneNumber\\\" formControlName=\\\"phoneNumber\\\"\\n               [class.invalid]=\\\"form.controls['phoneNumber'].touched && !form.controls['phoneNumber'].valid\\\">\\n        <label for=\\\"phoneNumber\\\" [class.active]=\\\"contact.phoneNumber\\\" data-error=\\\"Invalid phone number\\\">Phone number</label>\\n      </div>\\n    </div>\\n\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <i class=\\\"material-icons prefix\\\">place</i>\\n          <input id=\\\"street\\\" type=\\\"text\\\" class=\\\"validate\\\"\\n                 [(ngModel)]=\\\"contact.street\\\" formControlName=\\\"street\\\"\\n                 [class.invalid]=\\\"form.controls['street'].touched\\n                  && !form.controls['street'].valid\\\">\\n          <label for=\\\"street\\\" [class.active]=\\\"contact.street\\\">\\n            Street\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s8\\\">\\n          <i class=\\\"material-icons prefix\\\">map</i>\\n          <input id=\\\"city\\\" type=\\\"text\\\" class=\\\"validate\\\"\\n                 [(ngModel)]=\\\"contact.city\\\" formControlName=\\\"city\\\"\\n                 [class.invalid]=\\\"form.controls['city'].touched && !form.controls['city'].valid\\\">\\n          <label for=\\\"city\\\" [class.active]=\\\"contact.city\\\" data-error=\\\"City is required\\\">City</label>\\n        </div>\\n        <div class=\\\"input-field col s4\\\">\\n          <input id=\\\"zipcode\\\" type=\\\"text\\\" class=\\\"validate\\\"\\n                 [(ngModel)]=\\\"contact.zipcode\\\" formControlName=\\\"zipcode\\\"\\n                 [class.invalid]=\\\"form.controls['zipcode'].touched\\n                  && !form.controls['zipcode'].valid\\\">\\n          <label for=\\\"zipcode\\\"\\n                 [class.active]=\\\"contact.zipcode\\\"\\n                 data-error=\\\"Invalid ZipCode\\\">\\n            ZipCode\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div>Contact groups</div>\\n        <div *ngIf=\\\"groups && groups.controls\\\" class=\\\"input-field col s8\\\">\\n          <span *ngFor=\\\"let group of groups.controls; let i=index; let id=index\\\" style=\\\"padding-right: 30px\\\">\\n            <input id=\\\"{{id}}\\\" type=\\\"checkbox\\\" [formControl]=\\\"group\\\"/>\\n            <label for=\\\"{{id}}\\\">{{contactGroups[i].name}}</label>\\n          </span>\\n        </div>\\n      </div>\\n\\n    <button class=\\\"btn waves-effect waves-light\\\" type=\\\"submit\\\"\\n            [disabled]=\\\"!form.valid\\\">\\n      Submit<i class=\\\"material-icons right\\\">send</i>\\n    </button>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-form/contact-form.component.html\n// module id = ../../../../../src/app/contacts/contact-form/contact-form.component.html\n// module chunks = 1","import { ContactGroupModel } from './../shared/contact-group-model';\nimport { ContactGroupSelectionModel } from './../shared/contact-group-selection-model';\nimport { ContactsService } from './../shared/contacts.service';\nimport { ContactModel } from './../shared/contact-model';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/Rx'\nimport { BasicValidators } from '../../common/basic-validators';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.css']\n})\nexport class ContactFormComponent implements OnInit {\n\n  form: FormGroup;\n  title: string;\n  contact: ContactModel = new ContactModel();\n  contactId?: number;\n  contactGroups: ContactGroupSelectionModel[] = new Array<ContactGroupSelectionModel>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private contactService: ContactsService\n  ) {\n    this.form = formBuilder.group({\n      firstName: [''],\n      lastName: ['', [\n        Validators.required\n      ]],\n      email: ['', [\n        Validators.required,\n        BasicValidators.email\n      ]],\n      phoneNumber: ['', [\n        BasicValidators.phone\n      ]],\n      street: [''],\n      city: ['', [\n        Validators.required,\n      ]],\n      zipcode: [''],\n      groups: this.buildContactGroups()\n    });\n  }\n\n  get groups(): FormArray {\n    return this.form.get('groups') as FormArray;\n  }\n\n  buildContactGroups() {\n    const arr = this.contactGroups.map(s => {\n      return this.formBuilder.control(s.selected);\n    })\n    return this.formBuilder.array(arr);\n  }\n\n  setContactGroups() {\n    const newGroups = this.buildContactGroups();\n    const groupsArray: FormArray = this.form.get('groups') as FormArray;\n    for (let index = 0; index < newGroups.length; index++) {\n      const existingControl = groupsArray.at(index)\n      if (existingControl) {\n        groupsArray.setControl(index, newGroups.at(index));\n      } else {\n        groupsArray.insert(index, newGroups.at(index));\n      }\n    }\n  }\n\n  getSelectedGroupIds(formValues) {\n    return formValues.groups.map((item, index) => {\n      return {\n        id: this.contactGroups[index].id,\n        selected: item\n    }})\n    .filter(item => item.selected)\n    .map(item => item.id);\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      this.contactId = id;\n\n      this.title = id ? 'Edit contact' : 'New contact';\n\n      Observable.forkJoin(\n        this.contactService.getContactGroups(),\n        this.contactService.getContact(id)\n        )\n        .subscribe((resp) => {\n\n          const contactGroups = resp[0];\n          const contact = resp[1];\n\n          if (contact) {\n            this.contact = contact;\n          }\n\n          this.contactGroups = contactGroups.map(group => {\n            return {\n              id: group.id,\n              name: group.name,\n              selected: contact && contact.groups.indexOf(group.id) > -1 || false\n            }\n          });\n          this.setContactGroups();\n        });\n\n    });\n  }\n\n  save() {\n    let result;\n    const contactValue = this.form.value;\n    contactValue.groups = this.getSelectedGroupIds(contactValue);\n\n    if (this.contactId) {\n      result = this.contactService.updateContact(this.contactId, contactValue);\n    } else {\n      result = this.contactService.addContact(contactValue);\n    }\n\n    result.subscribe(data => this.router.navigate(['contacts']));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-form/contact-form.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-list/contact-list.component.css\n// module id = ../../../../../src/app/contacts/contact-list/contact-list.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\r\\n  <p style=\\\"font-size: 25px\\\">\\r\\n    Displaying {{ contacts.length }} contacts.\\r\\n  </p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <label>Filter by group</label>\\r\\n  <select class=\\\"browser-default\\\" [ngModel]=\\\"selectedGroup\\\" (ngModelChange)=\\\"onGroupChange($event)\\\">\\r\\n    <option [ngValue]=\\\"group.id\\\" *ngFor=\\\"let group of contactGroups\\\">{{group.name}}</option>\\r\\n    <option [ngValue]=\\\"selectedGroup\\\">--- All groups ---</option>\\r\\n  </select>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n<table>\\r\\n  <thead>\\r\\n  <tr>\\r\\n    <th data-field=\\\"name\\\">First name</th>\\r\\n    <th data-field=\\\"name\\\">Last name</th>\\r\\n    <th data-field=\\\"name\\\">Email</th>\\r\\n    <th data-field=\\\"name\\\">Groups</th>\\r\\n    <th data-field=\\\"name\\\">Edit</th>\\r\\n    <th data-field=\\\"name\\\">Delete</th>\\r\\n  </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let contact of contacts\\\">\\r\\n      <td>{{ contact.firstName }}</td>\\r\\n      <td>{{ contact.lastName }}</td>\\r\\n      <td>{{ contact.email }}</td>\\r\\n      <td>\\r\\n        <ng-template ngFor let-group [ngForOf]=\\\"translateGroupIds(contact.groups)\\\">\\r\\n          <div class=\\\"chip\\\">{{group}}</div>\\r\\n        </ng-template>\\r\\n      </td>\\r\\n      <td>\\r\\n        <a [routerLink]=\\\"['/contacts', contact.id]\\\">\\r\\n          <i class=\\\"material-icons\\\">mode_edit</i>\\r\\n        </a>\\r\\n      </td>\\r\\n      <td>\\r\\n        <a (click)=\\\"deleteContact($event, contact)\\\" href=\\\"#\\\">\\r\\n          <i class=\\\"material-icons\\\">delete</i>\\r\\n        </a>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"fixed-action-btn\\\" style=\\\"bottom: 45px; right: 24px;\\\">\\r\\n  <a class=\\\"btn-floating btn-large waves-effect waves-light green\\\"\\r\\n     routerLink=\\\"/contacts/new\\\">\\r\\n    <i class=\\\"material-icons\\\">add</i>\\r\\n  </a>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-list/contact-list.component.html\n// module id = ../../../../../src/app/contacts/contact-list/contact-list.component.html\n// module chunks = 1","import { ContactGroupModel } from './../shared/contact-group-model';\r\nimport { ContactModel } from './../shared/contact-model';\r\nimport { ContactsService } from './../shared/contacts.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx'\r\n\r\n@Component({\r\n  selector: 'app-contact-list',\r\n  templateUrl: './contact-list.component.html',\r\n  styleUrls: ['./contact-list.component.css']\r\n})\r\nexport class ContactListComponent implements OnInit {\r\n\r\n  private contacts: ContactModel[] = [];\r\n  private contactGroups: ContactGroupModel[] = [];\r\n\r\n  constructor(private contactService: ContactsService, private router: Router) { }\r\n\r\n  private loadData() {\r\n\r\n    Observable.forkJoin(\r\n        this.contactService.getContactGroups(),\r\n        this.contactService.getContacts()\r\n        ).subscribe(resp => {\r\n          this.contactGroups = resp[0];\r\n          this.contacts = resp[1];\r\n        });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData()\r\n  }\r\n\r\n  translateGroupIds(ids: number[]): string[] {\r\n    const result: string[] = [];\r\n    ids.sort().forEach(id => {\r\n      result.push(this.contactGroups.find(i => i.id === id).name);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  deleteContact(event: Event, contact: ContactModel) {\r\n    event.stopPropagation();\r\n    if (confirm('Are you sure you want to delete ' + contact.lastName + '?')) {\r\n      this.contactService.deleteContact(contact.id)\r\n        .subscribe(() => window.location.reload(),\r\n          err => {\r\n            alert('Could not delete contact.');\r\n          });\r\n    }\r\n  }\r\n\r\n  onGroupChange(selectedGroup) {\r\n    this.contactService.getContacts(selectedGroup)\r\n        .subscribe(contacts => {\r\n          this.contacts = contacts;\r\n        });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contact-list/contact-list.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ContactFormComponent} from './contact-form/contact-form.component'\nimport {ContactListComponent} from './contact-list/contact-list.component'\n\nconst routes: Routes = [\n  { path: 'contacts', component: ContactListComponent, pathMatch: 'full' },\n  { path: 'contacts/new', component: ContactFormComponent},\n  { path: 'contacts/:id', component: ContactFormComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContactsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contacts-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ContactsRoutingModule } from './contacts-routing.module';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\nimport { ContactsService } from './shared/contacts.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ContactsRoutingModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ContactListComponent, ContactFormComponent],\n  providers: [ContactsService]\n})\nexport class ContactsModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/contacts.module.ts","export class ContactModel {\n  id?: number;\n  firstName: string;\n  lastName: string;\n  street?: string;\n  city?: string;\n  zipCode?: string;\n  phoneNumber?: string;\n  email: string;\n  groups: number[];\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/shared/contact-model.ts","import { ContactGroupModel } from './contact-group-model';\r\nimport { HttpJsonClient } from './../../common/http-json-client';\r\nimport { ContactModel } from './contact-model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/empty';\r\n\r\n@Injectable()\r\nexport class ContactsService {\r\n\r\n  private serviceUrl = 'http://localhost:5000/api/contacts';\r\n  private contactGroups: Observable<ContactGroupModel[]>;\r\n\r\n  constructor(private http: HttpJsonClient) { }\r\n\r\n  private extractData<T>(res: Response): T {\r\n    const body = res.json();\r\n    return (<T>body || null);\r\n  }\r\n\r\n  private handleError(error: Response | any) {\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n  getContacts(groupId?: number) {\r\n    let url = this.serviceUrl;\r\n    if (groupId) {\r\n      url += `?groupId=${groupId}`;\r\n    }\r\n    return this.http\r\n      .get(url)\r\n      .map((resp) => this.extractData<ContactModel[]>(resp))\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getContact(id: number) {\r\n    if (!id) {\r\n      return Observable.of(null);\r\n    }\r\n    return this.http\r\n      .get(`${this.serviceUrl}/${id}`)\r\n      .map((resp) => this.extractData<ContactModel>(resp))\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  addContact(contact: ContactModel) {\r\n    return this.http\r\n      .post(this.serviceUrl, contact)\r\n      .map((resp) => this.extractData<ContactModel>(resp))\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  updateContact(id: number, contact: ContactModel) {\r\n    return this.http\r\n      .put(`${this.serviceUrl}/${id}`, contact)\r\n      .map((resp) => this.extractData<ContactModel>(resp))\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  deleteContact(id: number) {\r\n    return this.http\r\n      .delete(`${this.serviceUrl}/${id}`)\r\n      .map((resp) => Observable.empty<Response>())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getContactGroups() {\r\n    if (!this.contactGroups) {\r\n      this.contactGroups = this.http\r\n      .get(this.serviceUrl + '/contactgroups')\r\n      .map((resp) => this.extractData<ContactGroupModel[]>(resp))\r\n      .publishReplay(1).refCount()\r\n      .catch(this.handleError);\r\n    }\r\n    return this.contactGroups;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/contacts/shared/contacts.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = 1","module.exports = \"<h1>\\n  Welcome to awesome demo app\\n</h1>\\n\\n<p>\\n  Continue to contact manager via nav bar link\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/nav-bar/nav-bar.component.css\n// module id = ../../../../../src/app/nav-bar/nav-bar.component.css\n// module chunks = 1","module.exports = \"  <nav>\\n    <div class=\\\"nav-wrapper\\\">\\n      <a href=\\\"#!\\\" class=\\\"brand-logo center\\\">Awesome demo app</a>\\n      <ul class=\\\"left hide-on-med-and-down\\\">\\n        <li><a routerLink=\\\"contacts\\\" routerLinkActive=\\\"active\\\">Contacts</a></li>\\n      </ul>\\n    </div>\\n  </nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/nav-bar/nav-bar.component.html\n// module id = ../../../../../src/app/nav-bar/nav-bar.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/nav-bar/nav-bar.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/not-found/not-found.component.css\n// module id = ../../../../../src/app/not-found/not-found.component.css\n// module chunks = 1","module.exports = \"<p>\\n  Page not found\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/not-found/not-found.component.html\n// module id = ../../../../../src/app/not-found/not-found.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/app/not-found/not-found.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// D:/git/github/ContactManager/src/ContactManager.Client/src/main.ts"],"sourceRoot":"webpack:///"}